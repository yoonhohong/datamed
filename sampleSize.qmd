---
title: "Power and sample size calculation"
format: 
  revealjs:
    code-fold: true
    embed-resources: true
editor: visual
execute: 
  echo: true
---

## Effect size

-   두 군에서(치료군과 대조군) 결과변수(Y)의 평균치를 구해 그 차이를 계산\

-   위 값을 전체의 표준 편차로 나눔\

-   means -\> difference -\> pooled sd\
    -- 대조군의 평균치: -1.0\
    -- 치료군의 평균치: -0.7(즉, 30% 증가)\
    -- Pooled sd: 0.25

## Sample size calculation

-   t 분포
-   유의 수준, 5%
-   검정력, 80%

```{r}
library(pwr)
pwr.t.test(n = NULL,
                sig.level = 0.05, 
                type = "two.sample", 
                alternative = "two.sided", 
                power = 0.80, 
                d = 0.3/0.25) # effect size = cohen's d 
```

## What if you need a larger power?

-   유의 수준, 5%
-   검정력, 90%

```{r}
library(pwr)
pwr.t.test(n = NULL,
                sig.level = 0.05, 
                type = "two.sample", 
                alternative = "two.sided", 
                power = 0.90, 
                d = 0.3/0.25) # effect size = cohen's d 
```

## What if pooled sd gets large?

```{r}
pwr.t.test(n = NULL,
                sig.level = 0.05, 
                type = "two.sample", 
                alternative = "two.sided", 
                power = 0.80, 
                d = 0.3/0.5) 
```

## 일반화(I)

-   power = 0.9
-   md = difference of means
-   psd = pooled sd

```{r}
library(tidyverse)
df = list(md = seq(0.3, 1.3, by = 0.1), 
          psd = seq(0.2, 1.2, by = 0.1)) %>% cross_df()
```

```{r}
cal_ss = function(md, psd){
  res = pwr.t.test(n = NULL,
             sig.level = 0.05, 
             type = "two.sample", 
             alternative = "two.sided", 
             power = 0.90, 
             d = md/psd) 
  round(res$n)
}
```

## 일반화(II)

```{r}
df1 = df %>% 
  mutate(ss = map2_dbl(md, psd, cal_ss)) 
```

```{r}
df1 %>%
  ggplot(aes(psd, ss, col = factor(md))) + 
  geom_point() + 
  geom_line() + 
  theme_bw() + 
  xlab("Standard deviation (pooled)") + 
  ylab("Sample size") + 
  scale_color_discrete("Difference of means")
```
