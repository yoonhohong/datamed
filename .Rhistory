geom_boxplot(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to First Occurrence of Each Stage",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time[df_stage_time$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_boxplot(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to First Occurrence of Each Stage",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time[df_stage_time$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_boxplot(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
ggplot(df_stage_time[df_stage_time$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_boxplot(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
ggplot(df_stage_time[df_stage_time$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_boxplot(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time[df_stage_time$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
ggplot(df_stage_time[df_stage_time$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violiin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
ggplot(df_stage_time[df_stage_time$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
ggplot(df_stage_time[df_stage_time$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
scale_y_log10() +
labs(fill = "Stage")
ggplot(df_stage_time[df_stage_time$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
df = read_csv("Processed_Data/PROACT_2022v/PROACT_stage_alsfrs.csv")
df_long = df %>%
pivot_longer(
cols = c(hmm, king, mitos),
names_to = "Staging_system",
values_to = "Stage"
) %>%
select(subjectid, feature_delta, ALSFRS_R_Total, bulbar, motor, respiratory, Staging_system, Stage)
df
died = df %>%
filter(hmm == 6) %>%
select(subjectid, feature_delta, hmm)
# 각 stage에 도달하는 시간 분포 비교
# 각 환자(subjectid)가 각 staging system에서 특정 stage에 도달한 시간(feature_delta) - last recorded - 을 계산
# 각 환자에 대해 해당 stage가 마지막으로 관찰된 시간(즉, 그 stage에서 머문 마지막 시점)을 사용
# **"최초 도달 시점"**만 고려하면, 해당 stage를 짧게 스쳐 지나간 환자들도 포함되어 stage별 평균 시간이 너무 앞당겨짐.
df_stage_time = df_long %>%
group_by(subjectid, Staging_system, Stage) %>%
summarise(time_to_stage = max(feature_delta, na.rm = TRUE))
df_stage_time = df_stage_time %>%
filter(subjectid %iin% died$subjectid)
df_stage_time2 = df_stage_time %>%
filter(subjectid %in% died$subjectid)
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time2[df_stage_time2$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
df_stage_time2
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time2[df_stage_time2$Staging_system == "hmm",], aes(x = factor(Stage), y = time_to_stage, fill = factor(Stage))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time2[df_stage_time2$Staging_system == "hmm",], aes(x = factor(Stage), y = time_to_stage, fill = factor(Stage))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
ggplot(df_stage_time2[df_stage_time2$Staging_system == "king",], aes(x = factor(Stage), y = time_to_stage, fill = factor(Stage))) +
geom_violiin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
ggplot(df_stage_time2[df_stage_time2$Staging_system == "king",], aes(x = factor(Stage), y = time_to_stage, fill = factor(Stage))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
ggplot(df_stage_time2[df_stage_time2$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
str(df_stage_time2)
ggplot(df_stage_time[df_stage_time$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
ggplot(df_stage_time[df_stage_time$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
ggplot(df_stage_time[df_stage_time$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violiin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
ggplot(df_stage_time[df_stage_time$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
# 각 stage에 도달하는 시간 분포 비교
# 각 환자(subjectid)가 각 staging system에서 특정 stage에 도달한 시간(feature_delta) - last recorded - 을 계산
# 각 환자에 대해 해당 stage가 마지막으로 관찰된 시간(즉, 그 stage에서 머문 마지막 시점)을 사용
# **"최초 도달 시점"**만 고려하면, 해당 stage를 짧게 스쳐 지나간 환자들도 포함되어 stage별 평균 시간이 너무 앞당겨짐.
df_stage_time = df_long %>%
group_by(subjectid, Staging_system, Stage) %>%
summarise(time_to_stage = max(feature_delta, na.rm = TRUE))
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time[df_stage_time$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
df = read_csv("Processed_Data/PROACT_2022v/PROACT_stage_alsfrs.csv")
df_long = df %>%
pivot_longer(
cols = c(hmm, king, mitos),
names_to = "Staging_system",
values_to = "Stage"
) %>%
select(subjectid, feature_delta, ALSFRS_R_Total, bulbar, motor, respiratory, Staging_system, Stage)
died = df %>%
filter(hmm == 6) %>%
select(subjectid, feature_delta, hmm)
# system별로 long format 분리 후 각각의 factor 적용
df_hmm <- df_long %>%
filter(Staging_system == "hmm") %>%
mutate(Stage = factor(Stage, levels = 1:5)) %>%
filter(!is.na(Stage))
df_king <- df_long %>%
filter(Staging_system == "king") %>%
mutate(Stage = factor(Stage, levels = 1:4)) %>%
filter(!is.na(Stage))
df_mitos <- df_long %>%
filter(Staging_system == "mitos") %>%
mutate(Stage = factor(Stage, levels = 0:4)) %>%
filter(!is.na(Stage))
df_long = rbind(df_hmm, df_king, df_mitos)
ggplot(df_hmm, aes(x = Stage, y = ALSFRS_R_Total, fill = Stage)) +
geom_boxplot(outlier.shape = NA, alpha = 0.85) +
labs(
x = "HMM Stage",
y = "ALSFRS-R Total Score"
) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
ggsave("figure/hmm_alsfrs_total.png",
width = 4, height = 4, dpi = 300)
ggplot(df_king, aes(x = Stage, y = ALSFRS_R_Total, fill = Stage)) +
geom_boxplot(outlier.shape = NA, alpha = 0.85) +
labs(
x = "King's Stage",
y = "ALSFRS-R Total Score"
) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
ggsave("figure/king_alsfrs_total.png",
width = 4, height = 4, dpi = 300)
ggplot(df_mitos, aes(x = Stage, y = ALSFRS_R_Total, fill = Stage)) +
geom_boxplot(outlier.shape = NA, alpha = 0.85) +
labs(
x = "Mitos Stage",
y = "ALSFRS-R Total Score"
) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
ggsave("figure/mitos_alsfrs_total.png",
width = 4, height = 4, dpi = 300)
# 각 stage에 도달하는 시간 분포 비교
# 각 환자(subjectid)가 각 staging system에서 특정 stage에 도달한 시간(feature_delta) - last recorded - 을 계산
# 각 환자에 대해 해당 stage가 마지막으로 관찰된 시간(즉, 그 stage에서 머문 마지막 시점)을 사용
# **"최초 도달 시점"**만 고려하면, 해당 stage를 짧게 스쳐 지나간 환자들도 포함되어 stage별 평균 시간이 너무 앞당겨짐.
df_stage_time = df_long %>%
group_by(subjectid, Staging_system, Stage) %>%
summarise(time_to_stage = max(feature_delta, na.rm = TRUE))
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time[df_stage_time$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
ggplot(df_stage_time[df_stage_time$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2")
ggplot(df_stage_time[df_stage_time$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
df_stage_time2 = df_stage_time %>%
filter(subjectid %in% died$subjectid)
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time2[df_stage_time2$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
ggplot(df_stage_time2[df_stage_time2$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
ggplot(df_stage_time2[df_stage_time2$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage")
ggplot(df_stage_time2[df_stage_time2$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip()
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time2[df_stage_time2$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip()
ggplot(df_stage_time2[df_stage_time2$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip()
ggplot(df_stage_time2[df_stage_time2$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip()
ggplot(df_stage_time2[df_stage_time2$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip()
ggplot(df_stage_time2[df_stage_time2$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip()
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time2[df_stage_time2$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip()
ggplot(df_stage_time2[df_stage_time2$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
ggsave("figure/mitos_time2stage.png",
width = 4, height = 4, dpi = 300)
ggplot(df_stage_time2[df_stage_time2$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
ggsave("figure/mitos_time2stage.png",
width = 4, height = 4, dpi = 300)
ggplot(df_stage_time2[df_stage_time2$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time2[df_stage_time2$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
ggsave("figure/hmm_time2stage.png",
width = 4, height = 4, dpi = 300)
ggplot(df_stage_time2[df_stage_time2$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
ggsave("figure/king_time2stage.png",
width = 4, height = 4, dpi = 300)
ggplot(df_stage_time2[df_stage_time2$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip() +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
ggsave("figure/mitos_time2stage.png",
width = 4, height = 4, dpi = 300)
ggplot(df_hmm, aes(x = Stage, y = ALSFRS_R_Total, fill = Stage)) +
geom_violin(alpha = 0.85) +
labs(
x = "HMM Stage",
y = "ALSFRS-R Total Score"
) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
ggplot(df_hmm, aes(x = Stage, y = ALSFRS_R_Total, fill = Stage)) +
geom_violin(position = position_dodge(width = 0.8)) +
labs(
x = "HMM Stage",
y = "ALSFRS-R Total Score"
) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
ggplot(df_hmm, aes(x = Stage, y = ALSFRS_R_Total, fill = Stage)) +
geom_boxplot(outlier.shape = NA, alpha = 0.85) +
labs(
x = "HMM Stage",
y = "ALSFRS-R Total Score"
) +
scale_fill_brewer(palette = "Set2") +
theme_bw() +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)) +
theme(legend.position = "none")
# 각 시스템의 시간적 해상력, 비교 분석
# 시각화
ggplot(df_stage_time[df_stage_time$Staging_system == "hmm",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "HMM Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
coord_flip()
ggplot(df_stage_time[df_stage_time$Staging_system == "king",], aes(x = Stage, y = time_to_stage, fill = Stage)) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "King Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
coord_flip()
ggplot(df_stage_time[df_stage_time$Staging_system == "mitos",], aes(x = factor(Stage, levels = 0:4), y = time_to_stage, fill = factor(Stage, levels = 0:4))) +
geom_violin(alpha = 0.8, position = position_dodge(width = 0.8)) +
labs(title = "Time to Each Stage (last recorded)",
x = "MiTos Stage", y = "Months from Baseline") +
theme_minimal(base_size = 14) +
scale_fill_brewer(palette = "Set2") +
labs(fill = "Stage") +
coord_flip()
setwd("~/Dropbox/Github/datamed")
q()
