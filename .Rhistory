filter(year == 1952) %>%
mutate(gdpPercap_log10 = log10(gdpPercap))
head(df_1952)
lm_1952 = lm(lifeExp ~ gdpPercap_log10 + year + continent,
data = df_1952)
lm2_1952 = lm(lifeExp ~ gdpPercap_log10 + year + continent,
data = df_1952)
summary(lm2_1952)
lm2_1952 = lm(lifeExp ~ gdpPercap_log10 + year + continent,
data = df_1952)
summary(lm2_1952)
str(gapminder)
str(df_1952)
lm2_1952 = lm(lifeExp ~ gdpPercap_log10 + continent,
data = df_1952)
summary(lm2_1952)
lm2_1952 = lm(lifeExp ~ gdpPercap_log10 + continent + pop,
data = df_1952)
summary(lm2_1952)
lm2_1952 = lm(lifeExp ~ gdpPercap_log10 + continent,
data = df_1952)
summary(lm2_1952)
lm2_1952 = lm(lifeExp ~ gdpPercap_log10*continent,
data = df_1952)
summary(lm2_1952)
df_1952 %>%
ggplot(aes(gdpPercap_log10, lifeExp)) +
stat_smooth(method = "lm", level = 0.95) +
facet_wrap(~continent)
lm(gdpPercap_log10 ~ continent, data = df_1952)
col_mod = lm(gdpPercap_log10 ~ continent, data = df_1952)
summary(col_mod)
df_1952 %>%
ggplot(aes(continent, gdpPercap_log10)) +
geom_boxplot()
vif(lm2_1952)
library(car)
?vif
??vif
install.packages("car")
install.packages("car")
install.packages("car")
knitr::opts_chunk$set(echo = TRUE)
library(car)
vif(lm2_1952)
vif(lm2_1952, type = 'predictor')
vif(lm2_1952)
install.packages("DAAG")
library(DAAG)
vif(lm2_1952)
lm3_1952 = lm(lifeExp ~ gdpPercap_log10*continent,
data = df_1952)
summary(lm3_1952)
lm2_1952 = lm(lifeExp ~ gdpPercap_log10 + continent,
data = df_1952)
summary(lm2_1952)
vif(lm2_1952)
library(car)
vif(lm2_1952)
car::vif(lm2_1952)
car::vif(lm3_1952)
car::vif(lm3_1952, type = 'predictor')
library(car)
car::vif(lm3_1952, type = 'predictor')
car::vif(lm2_1952)
q()
install.packages("GGally")
knitr::opts_chunk$set(echo = TRUE)
library(gapminder)
library(dplyr)
library(ggplot2)
gapminder %>%
filter(year == 1952) %>%
ggplot(aes(gdpPercap, lifeExp)) +
geom_point()
gapminder %>%
filter(year == 1952) %>%
ggplot(aes(gdpPercap, lifeExp)) +
geom_point() +
scale_x_log10()
df_1952 = gapminder %>%
filter(year == 1952) %>%
mutate(gdpPercap_log10 = log10(gdpPercap))
cor.test(df_1952$gdpPercap_log10, df_1952$lifeExp)
lm_1952 = lm(lifeExp ~ gdpPercap_log10, data = df_1952)
summary(lm_1952)
confint(lm_1952, level = 0.95)
predictions = predict(lm_1952, newdata = df_1952, interval = "predict")
head(predictions)
df_1952_pred = cbind(df_1952, predictions)
df_1952_pred %>%
ggplot(aes(gdpPercap_log10, lifeExp)) +
geom_point() +
stat_smooth(method = "lm", level = 0.95) +
geom_line(aes(y=lwr), col = "red", linetype = "dashed") +
geom_line(aes(y=upr), col = "red", linetype = "dashed")
df_2002 = gapminder %>%
filter(year == 2002) %>%
select(lifeExp, gdpPercap) %>%
mutate(gdpPercap_log10 = log10(gdpPercap))
pred = predict(lm_1952, newdata = df_2002)
head(pred)
df = data.frame(obs = df_2002$lifeExp, prd = pred)
ggplot(df, aes(obs, prd)) +
geom_point() +
geom_abline(slope = 1, intercept = 0)
df_1952_pred %>%
mutate(sqe = (fit - lifeExp)^2) %>%
summarise(rmse = sqrt(sum(sqe)/142))
df %>%
mutate(sqe = (pred - obs)^2) %>%
summarize(rmse = sqrt(sum(sqe)/140))
prd_2002 = predict(lm_1952, newdata = df_2002,
interval ="confidence")
head(prd_2002)
lm2_1952 = lm(lifeExp ~ gdpPercap_log10 + continent,
data = df_1952)
summary(lm2_1952)
lm3_1952 = lm(lifeExp ~ gdpPercap_log10*continent,
data = df_1952)
summary(lm3_1952)
df_1952 %>%
ggplot(aes(gdpPercap_log10, lifeExp)) +
stat_smooth(method = "lm", level = 0.95) +
facet_wrap(~continent)
col_mod = lm(gdpPercap_log10 ~ continent, data = df_1952)
summary(col_mod)
df_1952 %>%
select(continent, gdpPercap_log10) %>%
ggpairs()
library(GGally)
df_1952 %>%
select(continent, gdpPercap_log10) %>%
ggpairs()
?ggpairs
plot(density(df_1952$gdpPercap_log10))
df_1952 %>% ggcorr()
df_1952 %>% ggcorr(label = T)
df_1952 %>%
select(continent, gdpPercap_log10) %>%
ggcorr(label = T)
mod = lm(gdpPercap_log10 ~ continent, data = df_1952)
summary(mod)
aov(gdpPercap_log10 ~ continent, data = df_1952)
aov_mod = aov(gdpPercap_log10 ~ continent, data = df_1952)
summary(aov_mod)
summary(aov(gdpPercap_log10 ~ continent, data = df_1952))
lm3_1952 = lm(lifeExp ~ gdpPercap_log10*continent,
data = df_1952)
summary(lm3_1952)
df_1952 %>%
ggplot(aes(gdpPercap_log10, lifeExp)) +
stat_smooth(method = "lm", level = 0.95) +
facet_wrap(~continent)
lm4_1952 = lm(lifeExp ~ gdpperCap_log10 + continent + gdpPercap_log10*continent, data = df_1952)
lm4_1952 = lm(lifeExp ~ gdpPerCap_log10 + continent + gdpPercap_log10*continent, data = df_1952)
knitr::opts_chunk$set(echo = TRUE)
library(gapminder)
library(dplyr)
library(ggplot2)
gapminder %>%
filter(year == 1952) %>%
ggplot(aes(gdpPercap, lifeExp)) +
geom_point()
gapminder %>%
filter(year == 1952) %>%
ggplot(aes(gdpPercap, lifeExp)) +
geom_point() +
scale_x_log10()
df_1952 = gapminder %>%
filter(year == 1952) %>%
mutate(gdpPercap_log10 = log10(gdpPercap))
cor.test(df_1952$gdpPercap_log10, df_1952$lifeExp)
lm_1952 = lm(lifeExp ~ gdpPercap_log10, data = df_1952)
summary(lm_1952)
confint(lm_1952, level = 0.95)
predictions = predict(lm_1952, newdata = df_1952, interval = "predict")
head(predictions)
df_1952_pred = cbind(df_1952, predictions)
df_1952_pred %>%
ggplot(aes(gdpPercap_log10, lifeExp)) +
geom_point() +
stat_smooth(method = "lm", level = 0.95) +
geom_line(aes(y=lwr), col = "red", linetype = "dashed") +
geom_line(aes(y=upr), col = "red", linetype = "dashed")
df_2002 = gapminder %>%
filter(year == 2002) %>%
select(lifeExp, gdpPercap) %>%
mutate(gdpPercap_log10 = log10(gdpPercap))
pred = predict(lm_1952, newdata = df_2002)
head(pred)
df = data.frame(obs = df_2002$lifeExp, prd = pred)
ggplot(df, aes(obs, prd)) +
geom_point() +
geom_abline(slope = 1, intercept = 0)
df_1952_pred %>%
mutate(sqe = (fit - lifeExp)^2) %>%
summarise(rmse = sqrt(sum(sqe)/142))
df %>%
mutate(sqe = (pred - obs)^2) %>%
summarize(rmse = sqrt(sum(sqe)/140))
prd_2002 = predict(lm_1952, newdata = df_2002,
interval ="confidence")
head(prd_2002)
lm2_1952 = lm(lifeExp ~ gdpPercap_log10 + continent,
data = df_1952)
summary(lm2_1952)
library(GGally)
df_1952 %>%
select(continent, gdpPercap_log10) %>%
ggpairs()
summary(aov(gdpPercap_log10 ~ continent, data = df_1952))
library(car)
car::vif(lm2_1952)
lm3_1952 = lm(lifeExp ~ gdpPercap_log10*continent,
data = df_1952)
summary(lm3_1952)
df_1952 %>%
ggplot(aes(gdpPercap_log10, lifeExp)) +
stat_smooth(method = "lm", level = 0.95) +
facet_wrap(~continent)
lm4_1952 = lm(lifeExp ~ gdpPerCap_log10 + continent + gdpPercap_log10*continent, data = df_1952)
lm4_1952 = lm(lifeExp ~ gdpPercap_log10 + continent + gdpPercap_log10*continent, data = df_1952)
summary(lm4_1952)
lm4_1952 = lm(lifeExp ~ gdpPercap_log10 + gdpPercap_log10*continent, data = df_1952)
summary(lm4_1952)
lm4_1952 = lm(lifeExp ~ gdpPercap_log10 + gdpPercap_log10*continent, data = df_1952)
summary(lm4_1952)
lm4_1952 = lm(lifeExp ~ gdpPercap_log10 + gdpPercap_log10:continent, data = df_1952)
summary(lm4_1952)
df_1952 %>%
ggplot(aes(continent, lifeExp)) %>%
geom_boxplot()
df_1952 %>%
ggplot(aes(continent, lifeExp)) +
geom_boxplot()
library(lmer4)
install.packages("lmer4")
install.packages("lme4")
library(lme4)
lme_mod = lmer(lifeExp ~ gdpPercap_log10 + (1+gdpPercap_log10|continent))
lme_mod = lmer(lifeExp ~ gdpPercap_log10 + (1+gdpPercap_log10|continent), data = df_1952, REML = F)
summary(lme_mod)
summary(lme_mod)
lme_mod = lmer(lifeExp ~ gdpPercap_log10 + (1+gdpPercap_log10|continent), data = df_1952)
summary(lme_mod)
coef(lme_mod)
null_mod = lmer(lifeExp ~ (1+gdpPercap_log10|continent), data = df_1952)
anova(lme_mod, null_mod)
vif(lm3_1952)
vif(lm3_1952, type = 'predictor')
vif(lm3_1952)
lme_mod1 = lmer(lifeExp ~ gdpPercap_log10 + (1|continent), data = df_1952)
summary(lme_mod1)
lme_mod2 = lmer(lifeExp ~ gdpPercap_log10 + (1+gdpPercap_log10|continent), data = df_1952)
summary(lme_mod2)
coef(lme_mod)
coef(lme_mod2)
null_mod = lmer(lifeExp ~ (1+gdpPercap_log10|continent), data = df_1952)
anova(lme_mod2, null_mod)
library(car)
df_1952 = gapminder %>%
filter(year == 1952) %>%
mutate(gdpPercap_log10 = log10(gdpPercap))
lm3_1952 = lm(lifeExp ~ gdpPercap_log10*continent,
data = df_1952)
summary(lm3_1952)
q()
?plogis
knitr::opts_chunk$set(echo = TRUE)
curve(plogis(-1*x), -5, 5, add=TRUE, lwd=2, lty=3)
curve(plogis(1*x), -5, 5, add=TRUE, lwd=2, lty=3)
curve(plogis(x), -5, 5, lwd=2, lty=3)
curve(plogis(x), -5, 5, lwd=2, lty=3)
curve(plogis(x), -5, 5)
library(carData)
str(TitanicSurvival)
summary(TitanicSurvival)
library(carData)
str(TitanicSurvival)
summary(TitanicSurvival)
TitanicSurvival = TitanicSurvival[complete.cases(TitanicSurvival),]
glm.fit = glm(survived ~., data = TitanicSurvival, family = "binomial")
summary(glm.fit)
exp(coef(glm.fit)[2])
-2.4978/0.166
library(lmtest)
glm.fit.null = glm(survived ~ 1, data = TitanicSurvival, family = "binomial")
lrtest(glm.fit, glm.fit.null)
contrasts(TitanicSurvival$passengerClass)
prob = predict(glm.fit, type = "response")
head(prob)
pred = rep("no", length(prob))
pred[prob>0.5] = "yes"
mean(pred == TitanicSurvival$survived)
plot(glm.fit)
plot_model(glm.fit)
?plot_model
??plot_model
library(ggplot2)
plot_model(glm.fit)
install.packages("sjPlot")
library(sjPlot)
plot_model(glm.fit)
plot_model(glm.fit, sort.est = T)
plot_model(glm.fit, sort.est = T, ci.lvl = 0.95)
plot_model(glm.fit, sort.est = T)
?plot_model
plot_model(glm.fit, sort.est = T, se = F)
plot_model(glm.fit, sort.est = T)
set.seed(1)
cnt = dim(TitanicSurvival)[1]
index = sample(cnt, round(cnt/7), replace = F)
train.data = TitanicSurvival[index,]
test.data = TitanicSurvival[-index,]
glm.fit = glm(survived ~., data = train.data,
family = "binomial")
prob = predict(glm.fit, test.data, type = "response")
pred = rep("no", cnt-round(cnt/7))
pred[prob>0.5] = "yes"
table(pred, test.data$survived)
mean(pred == test.data$survived)
mean(pred == test.data$survived)
table(pred, test.data$survived)
library(MASS)
lda.fit = lda(survived~., data = train.data)
lda.fit
plot(lda.fit)
plot(lda.fit)
pred = predict(lda.fit, test.data)
names(pred)
head(pred)
class(pred)
head(pred$posterior)
head(pred$class)
table(pred$class, test.data$survived)
mean(pred$class == test.data$survived)
library(ROCR)
prob = predict(glm.fit, test.data, type = "response")
?prediction
pred = prediction(predictions = prob, labels = test.data$survived)
perf = performance(pred, "tpr", "fpr") # tpr = true positive rate, fpr = false positive rate
plot(perf)
perf = performance(pred, "auc")
str(perf)
perf@y.values[[1]]
str(perf)
library(dplyr)
library(gapminder)
library(car)
library(lme4)
df_1952 = gapminder %>%
filter(year == 1952) %>%
mutate(gdpPercap_log10 = log10(gdpPercap))
lm3_1952 = lm(lifeExp ~ gdpPercap_log10*continent,
data = df_1952)
summary(lm3_1952)
vif(lm3_1952)
vif(lm3_1952)
lme_mod1 = lmer(lifeExp ~ gdpPercap_log10 + (1|continent), data = df_1952)
summary(lme_mod1)
lme_mod2 = lmer(lifeExp ~ gdpPercap_log10 + (1+gdpPercap_log10|continent), data = df_1952)
summary(lme_mod2)
coef(lme_mod2)
null_mod = lmer(lifeExp ~ (1+gdpPercap_log10|continent), data = df_1952)
anova(lme_mod2, null_mod)
library(MASS)
library(MASS)
lda.fit = lda(survived~., data = train.data)
set.seed(1)
cnt = dim(TitanicSurvival)[1]
library(carData)
set.seed(1)
cnt = dim(TitanicSurvival)[1]
cnt
cnt/7
set.seed(1)
cnt = dim(TitanicSurvival)[1]
index = sample(cnt, round(cnt/7), replace = F)
train.data = TitanicSurvival[-index,]
test.data = TitanicSurvival[index,]
glm.fit = glm(survived ~., data = train.data,
family = "binomial")
prob = predict(glm.fit, test.data, type = "response")
pred = rep("no", round(cnt/7))
pred[prob>0.5] = "yes"
table(pred, test.data$survived)
mean(pred == test.data$survived)
pred = rep("no", length(prob))
pred[prob>0.5] = "yes"
mean(pred == TitanicSurvival$survived)
curve(plogis(x), -5, 5)
library(carData)
str(TitanicSurvival)
summary(TitanicSurvival)
TitanicSurvival = TitanicSurvival[complete.cases(TitanicSurvival),]
glm.fit = glm(survived ~., data = TitanicSurvival, family = "binomial")
summary(glm.fit)
exp(coef(glm.fit)[2])
contrasts(TitanicSurvival$passengerClass)
library(sjPlot)
plot_model(glm.fit, sort.est = T)
library(lmtest)
glm.fit.null = glm(survived ~ 1, data = TitanicSurvival, family = "binomial")
lrtest(glm.fit, glm.fit.null)
prob = predict(glm.fit, type = "response")
head(prob)
prob = predict(glm.fit, type = "response")
head(prob)
pred = rep("no", length(prob))
pred[prob>0.5] = "yes"
mean(pred == TitanicSurvival$survived)
set.seed(1)
cnt = dim(TitanicSurvival)[1]
index = sample(cnt, round(cnt/7), replace = F)
train.data = TitanicSurvival[-index,]
test.data = TitanicSurvival[index,]
library(carData)
set.seed(1)
cnt = dim(TitanicSurvival)[1]
index = sample(cnt, round(cnt/7), replace = F) #
train.data = TitanicSurvival[index,]
test.data = TitanicSurvival[-index,]
library(MASS)
lda.fit = lda(survived~., data = train.data)
lda.fit
?saveRDS
saveRDS(glm.fit, "data/logisticReg_Titanic")
titanic_LRmodel = readRDS("data/logisticReg_Titanic")
saveRDS(glm.fit, "data/titanic_LRmodel.rds")
titanic_LRmodel = readRDS("data/titanic_LRmodel.rds")
saveRDS(test.data, "data/titanic_testData.rds")
titanic_testData = readRDS("data/titanic_testData.rds")
testData = readRDS("data/titanic_testData.rds")
class(testData)
prob = predict(titanic_LRmodel, testData, type = "response")
head(prob)
pred = prediction(predictions = prob, labels = testData$survived)
head(pred)
pred = prediction(predictions = prob, labels = testData$survived)
head(pred)
class(pred)
perf = performance(pred, "tpr", "fpr") # tpr = true positive rate, fpr = false positive rate
plot(perf)
plot(perf)
perf = performance(pred, "auc")
str(perf)
perf@y.values[[1]]
set.seed(1)
pop = rnorm(1000, 0, 10) # number=1000, mean=0, sd=10
mean(pop)
sd(pop)
sd(pop)
mean(pop)
mean(pop):sd(pop)
mean(pop);sd(pop)
set.seed(1)
pop = rnorm(1000, 0, 10) # number=1000, mean=0, sd=10
mean(pop);sd(pop)
sampl = sample(pop, 100, replace = F)
sampl = sample(pop, 100, replace = F)
x_bar = mean(sampl) # 표본 평균
n = length(sampl) # 표본 크기
x_bar = mean(sampl) # 표본 평균
n = length(sampl) # 표본 크기
s = sqrt(var(sampl)/(n-1)) # 모표준편차의 불편추정량으로서 표본 표준편차
x_bar = mean(sampl) # 표본 평균
n = length(sampl) # 표본 크기
s = sqrt(var(sampl)/(n-1)) # 모표준편차의 불편추정량으로서 표본 표준편차
sem = s/sqrt(n)
CI = c(x_bar - 2*sem, x_bar + 2*sem)
x_bar; sem; CI
ind = sample(length(sampl), length(sampl), replace = T)
fn(sampl, ind)
fn = function(z, index){
mean(z[index])
} # function need two arguments, the second one should be index
fn(sampl, ind)
# boot
library(boot)
res = boot(sampl, fn, R=1000)
res$t0
mu = mean(res$t)
sem = sd(res$t) # standard deviation of the sample mean
ci = boot.ci(res, type = "norm")
mu; sem; ci
ci = boot.ci(res, type = "norm")
mu; sem; ci
mu
sem
mu; sem; ci
s = sqrt(var(sampl)*n/(n-1)) # 모표준편차의 불편추정량으로서 표본 표준편차
sem = s/sqrt(n)
CI = c(x_bar - 2*sem, x_bar + 2*sem)
x_bar; sem; CI
x_bar = mean(sampl) # 표본 평균
n = length(sampl) # 표본 크기
s = sqrt(var(sampl)*n/(n-1)) # 모표준편차의 불편추정량으로서 표본 표준편차
sem = s/sqrt(n)
CI = c(x_bar - 2*sem, x_bar + 2*sem)
x_bar; sem; CI
x_bar = mean(sampl) # 표본 평균
n = length(sampl) # 표본 크기
s = sqrt(var(sampl)*n/(n-1)) # 모표준편차의 불편추정량으로서 표본 표준편차
sem = s/sqrt(n)
sem = s/sqrt(n)
CI = c(x_bar - 2*sem, x_bar + 2*sem)
x_bar; sem; CI
mu; sem; ci
setwd("~/Library/CloudStorage/Dropbox/Github/datamed")
View(lme_mod1)
q()
